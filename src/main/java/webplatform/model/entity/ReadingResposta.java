package webplatform.model.entity;
// default package

import javax.persistence.Column;

// Generated Apr 21, 2018 5:29:24 PM by Hibernate Tools 5.1.6.Final

import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * ReadingResposta generated by hbm2java
 */
@Entity
@Table(name = "READING_RESPOSTA")
public class ReadingResposta implements java.io.Serializable {

	private Long id;
	private ExercicioAluno exercicioAluno;
	private ReadingQuestao readingQuestao;
	private ReadingAlternativa readingQuestaoResposta;

	public ReadingResposta() {
	}

	public ReadingResposta(Long id) {
		this.id = id;
	}

	public ReadingResposta(Long id, ExercicioAluno exercicioAluno, ReadingQuestao readingQuestao,
			ReadingAlternativa readingAlternativa) {
		this.id = id;
		this.exercicioAluno = exercicioAluno;
		this.readingQuestao = readingQuestao;
		this.readingQuestaoResposta = readingAlternativa;
	}

	@Id
	@GenericGenerator(name = "READING_RESPOSTA_SEQUENCE", strategy = "org.hibernate.id.enhanced.SequenceStyleGenerator", parameters = {
			@Parameter(name = "sequence_name", value = "READING_RESPOSTA_SEQUENCE"),
			@Parameter(name = "initial_value", value = "1"), @Parameter(name = "increment_size", value = "1") })
	@GeneratedValue(generator = "READING_RESPOSTA_SEQUENCE")
	@Column(name = "READING_RESPOSTA_ID", unique = true, nullable = false, precision = 22, scale = 0)
	public Long getId() {
		return id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "EXERCICIO_ALUNO")
	public ExercicioAluno getExercicioAluno() {
		return this.exercicioAluno;
	}

	public void setExercicioAluno(ExercicioAluno exercicioAluno) {
		this.exercicioAluno = exercicioAluno;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "READING_QUESTAO")
	public ReadingQuestao getReadingQuestao() {
		return this.readingQuestao;
	}

	public void setReadingQuestao(ReadingQuestao readingQuestao) {
		this.readingQuestao = readingQuestao;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "READING_QUESTAO_RESPOSTA")
	public ReadingAlternativa getReadingQuestaoResposta() {
		return readingQuestaoResposta;
	}

	public void setReadingQuestaoResposta(ReadingAlternativa readingQuestaoResposta) {
		this.readingQuestaoResposta = readingQuestaoResposta;
	}

}
