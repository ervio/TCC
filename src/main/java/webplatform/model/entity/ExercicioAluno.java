package webplatform.model.entity;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

import com.fasterxml.jackson.annotation.JsonIgnore;

/**
 * ExercicioAluno generated by hbm2java
 */
@Entity
@Table(name = "EXERCICIO_ALUNO")
public class ExercicioAluno implements java.io.Serializable {

	private Long idExercicioAluno;
	private Aluno aluno;
	private Exercicio exercicio;
	private Integer nota;
	private Integer chances;
	private Integer totalQuestoes;
	private Integer questoesCorretas;
	private Date dataInicio;
	private Date dataFim;
	private String writingQuestaoResposta;
	private Set<ExercicioAlunoResposta> exercicioAlunoRespostas = new HashSet<ExercicioAlunoResposta>();

	public ExercicioAluno() {
	}

	public ExercicioAluno(Long idExercicioAluno) {
		this.idExercicioAluno = idExercicioAluno;
	}

	public ExercicioAluno(Long idExercicioAluno, Aluno aluno, Exercicio exercicio, Integer nota, Date dataInicio,
			Set<ExercicioAlunoResposta> exercicioAlunoRespostas) {
		this.idExercicioAluno = idExercicioAluno;
		this.aluno = aluno;
		this.exercicio = exercicio;
		this.nota = nota;
		this.dataInicio = dataInicio;
		this.exercicioAlunoRespostas = exercicioAlunoRespostas;
	}

	@Id
	@GenericGenerator(name = "EXERCICIO_ALUNO_SEQUENCE", strategy = "org.hibernate.id.enhanced.SequenceStyleGenerator", parameters = {
			@Parameter(name = "sequence_name", value = "EXERCICIO_ALUNO_SEQUENCE"),
			@Parameter(name = "initial_value", value = "1"), @Parameter(name = "increment_size", value = "1") })
	@GeneratedValue(generator = "EXERCICIO_ALUNO_SEQUENCE")
	@Column(name = "ID_EXERCICIO_ALUNO", unique = true, nullable = false, precision = 22, scale = 0)
	public Long getIdExercicioAluno() {
		return this.idExercicioAluno;
	}

	public void setIdExercicioAluno(Long idExercicioAluno) {
		this.idExercicioAluno = idExercicioAluno;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "ALUNO")
	public Aluno getAluno() {
		return this.aluno;
	}

	public void setAluno(Aluno aluno) {
		this.aluno = aluno;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "EXERCICIO")
	public Exercicio getExercicio() {
		return this.exercicio;
	}

	public void setExercicio(Exercicio exercicio) {
		this.exercicio = exercicio;
	}

	@Column(name = "NOTA", precision = 2, scale = 0)
	public Integer getNota() {
		return this.nota;
	}

	public void setNota(Integer nota) {
		this.nota = nota;
	}

	@Column(name = "CHANCES", precision = 5, scale = 0)
	public Integer getChances() {
		return chances;
	}

	public void setChances(Integer chances) {
		this.chances = chances;
	}

	@Column(name = "TOTAL_QUESTOES", precision = 5, scale = 0)
	public Integer getTotalQuestoes() {
		return totalQuestoes;
	}

	public void setTotalQuestoes(Integer totalQuestoes) {
		this.totalQuestoes = totalQuestoes;
	}

	@Column(name = "QUESTOES_CORRETAS", precision = 5, scale = 0)
	public Integer getQuestoesCorretas() {
		return questoesCorretas;
	}

	public void setQuestoesCorretas(Integer questoesCorretas) {
		this.questoesCorretas = questoesCorretas;
	}

	@Column(name = "DATA_INICIO")
	@Temporal(TemporalType.TIMESTAMP)
	public Date getDataInicio() {
		return dataInicio;
	}

	public void setDataInicio(Date dataInicio) {
		this.dataInicio = dataInicio;
	}

	@Column(name = "DATA_FIM")
	@Temporal(TemporalType.TIMESTAMP)
	public Date getDataFim() {
		return dataFim;
	}

	public void setDataFim(Date dataFim) {
		this.dataFim = dataFim;
	}

	@Column(name = "WRITING_QUESTAO_RESPOSTA", length = 1000)
	public String getWritingQuestaoResposta() {
		return writingQuestaoResposta;
	}

	public void setWritingQuestaoResposta(String writingQuestaoResposta) {
		this.writingQuestaoResposta = writingQuestaoResposta;
	}

	@JsonIgnore
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "exercicioAluno")
	public Set<ExercicioAlunoResposta> getExercicioAlunoRespostas() {
		return this.exercicioAlunoRespostas;
	}

	public void setExercicioAlunoRespostas(Set<ExercicioAlunoResposta> exercicioAlunoRespostas) {
		this.exercicioAlunoRespostas = exercicioAlunoRespostas;
	}

}
