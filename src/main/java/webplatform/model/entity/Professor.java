package webplatform.model.entity;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

import com.fasterxml.jackson.annotation.JsonIgnore;

/**
 * Professor generated by hbm2java
 */
@SuppressWarnings("serial")
@Entity
@Table(name = "PROFESSOR")
public class Professor implements java.io.Serializable {

	private Long id;
	private String nome;
	private String telefone;
	private String email;
	private String logradouro;
	private String bairro;
	private String cidade;
	private String cep;
	private String password;
	private Set<Convite> convites = new HashSet<Convite>();
	private Set<Aluno> alunos = new HashSet<Aluno>();
	private Set<Exercicio> exercicios = new HashSet<Exercicio>();

	public Professor() {
	}

	public Professor(Long id) {
		this.id = id;
	}

	public Professor(Long id, String nome, String telefone, String email, String logradouro, String bairro,
			String cidade, String cep, String password, Set<Convite> convites, Set<Aluno> alunos,
			Set<Exercicio> exercicios) {
		this.id = id;
		this.nome = nome;
		this.telefone = telefone;
		this.email = email;
		this.logradouro = logradouro;
		this.bairro = bairro;
		this.cidade = cidade;
		this.cep = cep;
		this.password = password;
		this.convites = convites;
		this.alunos = alunos;
		this.exercicios = exercicios;
	}

	@Id
	@SequenceGenerator(name = "PROFESSOR_SEQUENCE", sequenceName = "PROFESSOR_SEQUENCE")
	@GeneratedValue(strategy = GenerationType.AUTO, generator = "PROFESSOR_SEQUENCE")
	@Column(name = "ID_PROFESSOR", unique = true, nullable = false, precision = 22, scale = 0)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@Column(name = "NOME", length = 50)
	public String getNome() {
		return this.nome;
	}

	public void setNome(String nome) {
		this.nome = nome;
	}

	@Column(name = "TELEFONE", length = 11)
	public String getTelefone() {
		return this.telefone;
	}

	public void setTelefone(String telefone) {
		this.telefone = telefone;
	}

	@Column(name = "EMAIL", length = 50)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "LOGRADOURO", length = 50)
	public String getLogradouro() {
		return this.logradouro;
	}

	public void setLogradouro(String logradouro) {
		this.logradouro = logradouro;
	}

	@Column(name = "BAIRRO", length = 50)
	public String getBairro() {
		return this.bairro;
	}

	public void setBairro(String bairro) {
		this.bairro = bairro;
	}

	@Column(name = "CIDADE", length = 20)
	public String getCidade() {
		return this.cidade;
	}

	public void setCidade(String cidade) {
		this.cidade = cidade;
	}

	@Column(name = "CEP", length = 9)
	public String getCep() {
		return this.cep;
	}

	public void setCep(String cep) {
		this.cep = cep;
	}

	@Column(name = "PASSWORD", length = 50)
	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@JsonIgnore
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "professor")
	public Set<Convite> getConvites() {
		return this.convites;
	}

	public void setConvites(Set<Convite> convites) {
		this.convites = convites;
	}

	@JsonIgnore
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "professor")
	public Set<Aluno> getAlunos() {
		return this.alunos;
	}

	public void setAlunos(Set<Aluno> alunos) {
		this.alunos = alunos;
	}

	@JsonIgnore
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "professor")
	public Set<Exercicio> getExercicios() {
		return this.exercicios;
	}

	public void setExercicios(Set<Exercicio> exercicios) {
		this.exercicios = exercicios;
	}

}
